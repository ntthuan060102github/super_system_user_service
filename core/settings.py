"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

from pkg_helpers.configs.base import BaseConfig

BASE_CONFIG = BaseConfig()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-)_ftxc3ga)!ks0!!@2qb_sch&5g5c@hdwhlw6vh826(9&s^-e0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'drf_yasg',
    'appbase'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': f'django.db.backends.{BASE_CONFIG.relational_database.engine}',
        'NAME': BASE_CONFIG.relational_database.db_name,
        'USER' : BASE_CONFIG.relational_database.username,
        'PASSWORD': BASE_CONFIG.relational_database.password,
        'HOST': BASE_CONFIG.relational_database.host,
        'PORT': BASE_CONFIG.relational_database.port,
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': f'redis://{BASE_CONFIG.redis_database.username}:{BASE_CONFIG.redis_database.password}@{BASE_CONFIG.redis_database.host}:{BASE_CONFIG.redis_database.port}',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = "appbase.User"

LOGGING = {
    "version": 1,
    "disable_existing_loggers": True,
    'handlers': {
        'logtail': {
            'class': 'logtail.LogtailHandler',
            'source_token': BASE_CONFIG.remote_log_token,
        },
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "loggers": {
        "": {
            "handlers": [
                "logtail",
                "console"
            ],
            "level": "INFO",
        },
    },
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {module} {process:d} {thread:d} {message}",
            "style": "{",
        },
    }
}

SWAGGER_SETTINGS = {
    'Bearer': {
        'type': 'apiKey',
        'name': 'Authorization',
        'in': 'header'
    }
}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = BASE_CONFIG.mail.host
EMAIL_PORT = BASE_CONFIG.mail.port
EMAIL_HOST_USER = BASE_CONFIG.mail.username
EMAIL_HOST_PASSWORD = BASE_CONFIG.mail.password
EMAIL_USE_TLS = BASE_CONFIG.mail.use_tls
EMAIL_USE_SSL = BASE_CONFIG.mail.use_ssl

CELERY_BROKER_URL = f'redis://{BASE_CONFIG.redis_database.username}:{BASE_CONFIG.redis_database.password}@{BASE_CONFIG.redis_database.host}:{BASE_CONFIG.redis_database.port}'
CELERY_RESULT_BACKEND = f'redis://{BASE_CONFIG.redis_database.username}:{BASE_CONFIG.redis_database.password}@{BASE_CONFIG.redis_database.host}:{BASE_CONFIG.redis_database.port}'
CELERY_CACHE_BACKEND = "default"
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_RESULT_EXPIRES = 60
CELERY_TIMEZONE = "Asia/Ho_Chi_Minh"
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60
CELERY_IMPORTS = ["pkg_helpers.background_tasks.tasks"]
